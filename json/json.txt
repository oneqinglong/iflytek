JSON=javascript object notation 
JS对象标记
JSON是一种轻量级的数据交换格式
它基于ECMAScript的一个子集
ECMScript是w3c制定的js规范

JSON采用完全独立于编程语言的文本格式来存储和表示数据。
简洁和清晰的层次结构
使JSON成为理想的数据交换语言。
易于人阅读和编写
同时也易于机器解析和生成
并有效地提升网络传输效率

## 1. JSON语法

### 1.1 JSON语法规则

在JS语言中，一切都是对象。
因此，任何支持的类型都可以通过JSON来表示
例如字符串，数字，对象，数组等。
但是对象和数组是比较特殊且常用的两种类型:
1.对象表示为键值对
2.数据由逗号分隔
3.花括号保存对象
4.方括号保存数组

### 2.JSON键/值对

JSON键值对是用来保存JS对象的一种方式
和JS对象的写法也大同小异
键值对组合中的键名写在前面并用双引号""包裹
使用冒号`:`分隔，
然后紧接着值:

```json
{"firstName":"John"}
``` 

这很容易理解，等价于JavaScript语句:

```javascript
{firstName="John"}
```

### 3.JSON与JS对象的关系

很多人搞不清楚JSON和JS对象的关系
甚至连谁是谁都不清楚。
其实，可以这么理解：

<b>
JSON是JS对象的`字符串表示法`，
它使用文本表示一个JS对象的信息
本质是一个字符串
</b>

如

```
//这是一个对象，注意键名也是可以使用引号包裹的
var obj={a:`Hello`,b:`World`};
//这是一个JSON字符串，本质是一个字符串
var json={"a":"Hello","b":"World"};
```

### 4 JSON和JS对象互转

要实现从对象转换为JSON字符串，使用`JSON.stringify()`方法: 

```javascript
var json=JSON.stringify({a:‘Hello’,b:‘World’});
//结果是'{"a":"Hello","b":"World"}'

要实现从JSON转换为对象，使用JSON.parse()方法:

```javascript
var obj=JSON.parse('{"a":"Hello","b":"World"}');
```

## 常用类型

在JS语言中，一切都是对象。
因此，任何支持的类型都可以通过JSON来表示，
例如字符串，数字，对象，数组等。
但是对象和数组是比较特殊且常用的两种类型。

对象: 对象在JS中是使用话

```